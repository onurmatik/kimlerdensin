import math

def calculate_cloud(items, steps=4, is_linear = False):
    """
    Accepts a list of items in the format [['ankara', 3], ['izmir', 5], ...]
    and returns a dict in the format {'ankara':1, 'izmir':2}
    """
    thresholds = []
    weights = [item[1] for item in items]
    max_weight = float(max(weights))
    min_weight = float(min(weights))

    # there are (steps - 1) thresholds
    if is_linear:
        # linear distribution
        delta = (max_weight - min_weight) / float(steps)
        thresholds = [min_weight + i * delta for i in range(1, steps)]
    else:
        # logarithmic distribution
        thresholds = [math.pow(max_weight - min_weight, float(i) / float(steps-1)) \
                      for i in range(1, steps)]

    list = {}
    for i in range(len(items)):
        for j in range(steps - 1):
            if items[i][1] <= thresholds[j]:
                list[items[i][0]] = j + 1
                break
            elif j == steps - 2:
                # last step
                list[items[i][0]] = j + 2

    return list


if __name__ == '__main__':
    list = [['ank', 1], ['ist', 13], ['izm', 4], ['ant', 14], ['adn', 15]]
    calculate_cloud(list, steps=4)
    print list

